- case: failure_rescue
  disable_cache: true
  main: |
    from returns.result import Failure, Result

    def returns_result(param: int) -> Result[str, Exception]:
        ...

    reveal_type(Failure(1).rescue(returns_result))  # N: Revealed type is 'returns.result.Result[builtins.str*, builtins.Exception*]'


- case: failure_fix
  disable_cache: true
  main: |
    from returns.result import Failure

    reveal_type(Failure(1).fix(str))  # N: Revealed type is 'returns.result.Result[builtins.str*, builtins.int]'


- case: failure_map_failure
  disable_cache: true
  main: |
    from returns.result import Failure

    reveal_type(Failure(1).map_failure(str))  # N: Revealed type is 'returns.result.Result[Any, builtins.str*]'


- case: failure_failure
  disable_cache: true
  main: |
    from returns.result import Failure

    reveal_type(Failure(1).failure())  # N: Revealed type is 'builtins.int*'
