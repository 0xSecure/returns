- case: requires_context_ioresult_lift_context_result
  disable_cache: true
  main: |
    from returns.context import RequiresContextIOResult, RequiresContextResult
    from returns.result import Success

    def test(arg: int) -> RequiresContextResult[int, str, int]:
        return RequiresContextResult(lambda deps: Success(str(arg + deps)))

    reveal_type(RequiresContextIOResult.lift_context_result(test))  # N: Revealed type is 'def (returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.int*, builtins.int*]) -> returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.str*, builtins.int*]'
