- case: bind_async_future_and_flow
  disable_cache: true
  main: |
    from returns.functions import identity
    from returns.pointfree import bind_async_future_result
    from returns.future import FutureResult
    from returns.context import ReaderFutureResult
    from returns.pipeline import flow

    async def test(arg: int) -> FutureResult[float, str]:
        ...

    r: ReaderFutureResult[object, int, str]
    reveal_type(flow(r, bind_async_future_result(test), identity))  # N: Revealed type is 'returns.context.requires_context_future_result.RequiresContextFutureResult*[builtins.object*, builtins.float, builtins.str]'


- case: bind_async_future_result_requires_context_future_result
  disable_cache: true
  main: |
    from returns.pointfree import bind_async_future_result
    from returns.future import FutureResult
    from returns.context import ReaderFutureResult

    async def test(arg: float) -> FutureResult[int, Exception]:
        ...

    x: ReaderFutureResult[bool, float, Exception]
    reveal_type(bind_async_future_result(test)(x))  # N: Revealed type is 'returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.bool*, builtins.int, builtins.Exception]'
