- case: bind_future_result_and_flow
  disable_cache: true
  main: |
    from returns.functions import identity
    from returns.pointfree import bind_future_result, bind
    from returns.future import FutureResultE
    from returns.context import ReaderFutureResultE
    from returns.pipeline import flow

    def test(arg: int) -> FutureResultE[float]:
        ...

    def second(arg: float) -> ReaderFutureResultE[bool, str]:
        ...

    r: ReaderFutureResultE[bool, int]
    reveal_type(flow(r, bind_future_result(test), bind(second), identity))  # N: Revealed type is 'returns.context.requires_context_future_result.RequiresContextFutureResult*[builtins.bool*, builtins.str*, builtins.Exception*]'


- case: bind_future_result_requires_context_future_result
  disable_cache: true
  main: |
    from returns.pointfree import bind_future_result
    from returns.future import FutureResultE
    from returns.context import ReaderFutureResultE

    def test(arg: float) -> FutureResultE[int]:
        ...

    x: ReaderFutureResultE[bool, float]
    reveal_type(bind_future_result(test)(x))  # N: Revealed type is 'returns.context.requires_context_future_result.RequiresContextFutureResult[builtins.bool*, builtins.int, builtins.Exception]'
