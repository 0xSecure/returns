
- case: requires_context_ioresult_lift_result
  disable_cache: true
  main: |
    from returns.context import RequiresContextIOResult
    from returns.result import Result, Success

    def test(arg: int) -> Result[str, int]:
        return Success(str(arg))

    reveal_type(RequiresContextIOResult.lift_result(test))  # N: Revealed type is 'def (returns.context.requires_context_ioresult.RequiresContextIOResult[<nothing>, builtins.int*, builtins.int*]) -> returns.context.requires_context_ioresult.RequiresContextIOResult[<nothing>, builtins.str*, builtins.int*]'


- case: requires_context_ioresult_lift_ioresult
  disable_cache: true
  main: |
    from returns.context import RequiresContextIOResult
    from returns.result import Result, Success
    from returns.io import IOResult, IOSuccess

    def test(arg: int) -> IOResult[str, int]:
        return IOSuccess(str(arg))

    reveal_type(RequiresContextIOResult.lift_ioresult(test))  # N: Revealed type is 'def (returns.context.requires_context_ioresult.RequiresContextIOResult[<nothing>, builtins.int*, builtins.int*]) -> returns.context.requires_context_ioresult.RequiresContextIOResult[<nothing>, builtins.str*, builtins.int*]'


- case: requires_context_ioresult_lift_context
  disable_cache: true
  main: |
    from returns.context import RequiresContextIOResult, RequiresContext

    def test(arg: int) -> RequiresContext[int, str]:
        return RequiresContext(lambda deps: str(arg + deps))

    reveal_type(RequiresContextIOResult.lift_context(test))  # N: Revealed type is 'def (returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.int*, <nothing>]) -> returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.str*, <nothing>]'


- case: requires_context_ioresult_lift_context_result
  disable_cache: true
  main: |
    from returns.context import RequiresContextIOResult, RequiresContextResult
    from returns.result import Success

    def test(arg: int) -> RequiresContextResult[int, str, int]:
        return RequiresContextResult(lambda deps: Success(str(arg + deps)))

    reveal_type(RequiresContextIOResult.lift_context_result(test))  # N: Revealed type is 'def (returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.int*, builtins.int*]) -> returns.context.requires_context_ioresult.RequiresContextIOResult[builtins.int*, builtins.str*, builtins.int*]'
